Reverse Engineering: vault-door-5

In the last challenge, you mastered octal (base 8), decimal (base 10), and hexadecimal (base 16) numbers,
but this vault door uses a different change of base as well as URL encoding!
The source code for this vault is here: VaultDoor5.java

----------------------------------------

base64Encode(byte[] input)

urlEncode(byte[] input)
    for (int i=0; i<input.length; i++) {
        buf.append(String.format("%%%2x", input[i]));
    }

checkPassword(String password)
    String urlEncoded = urlEncode(password.getBytes());
    String base64Encoded = base64Encode(urlEncoded.getBytes());
    String expected = "JTYzJTMwJTZlJTc2JTMzJTcyJTc0JTMxJTZlJTY3JTVm"
                    + "JTY2JTcyJTMwJTZkJTVmJTYyJTYxJTM1JTY1JTVmJTM2"
                    + "JTM0JTVmJTY0JTYxJTM4JTM4JTMyJTY0JTMwJTMx";


the check consists of
    url encode string
    base64 the url string



JTYzJTMwJTZlJTc2JTMzJTcyJTc0JTMxJTZlJTY3JTVmJTY2JTcyJTMwJTZkJTVmJTYyJTYxJTM1JTY1JTVmJTM2JTM0JTVmJTY0JTYxJTM4JTM4JTMyJTY0JTMwJTMx

base64 -d

%63%30%6e%76%33%72%74%31%6e%67%5f%66%72%30%6d%5f%62%61%35%65%5f%36%34%5f%64%61%38%38%32%64%30%31

url decoder

c0nv3rt1ng_fr0m_ba5e_64_da882d01

----------------------------------------

picoCTF{c0nv3rt1ng_fr0m_ba5e_64_da882d01}


