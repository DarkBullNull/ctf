Reverse Engineering: vault-door-4

This vault uses ASCII encoding for the password.
The source code for this vault is here: VaultDoor4.java

----------------------------------------

byte[] passBytes = password.getBytes();
byte[] myBytes = {
    106 , 85  , 53  , 116 , 95  , 52  , 95  , 98  ,
    0x55, 0x6e, 0x43, 0x68, 0x5f, 0x30, 0x66, 0x5f,
    0142, 0131, 0164, 063 , 0163, 0137, 0142, 071 ,
    'e' , '9' , '2' , 'f' , '7' , '6' , 'a' , 'c' ,
};
for (int i=0; i<32; i++) {
    if (passBytes[i] != myBytes[i]) {
        return false;
    }
}


convert the values

decimal:
106   -->  'j'
85    -->  'U'
53    -->  '5'
116   -->  't'
95    -->  '_'
52    -->  '4'
95    -->  '_'
98    -->  'b'

hex:
0x55  -->  'U'
0x6e  -->  'n'
0x43  -->  'C'
0x68  -->  'h'
0x5f  -->  '_'
0x30  -->  '0'
0x66  -->  'f'
0x5f  -->  '_'

octal:
0142  -->  'b'
0131  -->  'Y'
0164  -->  't'
063   -->  '3'
0163  -->  's'
0137  -->  '_'
0142  -->  'b'
071   -->  '9'

character:
'e'
'9'
'2'
'f'
'7'
'6'
'a'
'c'

-----

a1 = (106, 85, 53 , 116 , 95  , 52  , 95 , 98 , 0x55, 0x6e, 0x43, 0x68, 0x5f, 0x30, 0x66, 0x5f, 0o142, 0o131, 0o164, 0o63 , 0o163, 0o137, 0o142, 0o71)
a2 = ['e' , '9' , '2' , 'f' , '7' , '6' , 'a' , 'c']
s = str()

for i in a1:
    s += chr(i)

for i in a2:
    s += i

print(s)

----------------------------------------

picoCTF{jU5t_4_bUnCh_0f_bYt3s_b9e92f76ac}

